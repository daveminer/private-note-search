import { AztecAddress } from '@aztec/circuits.js';
import { FunctionSelector, FunctionType, getFunctionDebugMetadata, } from '@aztec/foundation/abi';
import { BufferReader, prefixBufferWithLength } from '@aztec/foundation/serialize';
import { SerializableContractInstance } from '@aztec/types/contracts';
import { EncodedContractFunction } from './contract_data.js';
/**
 * A contract Data Access Object (DAO).
 * Contains the contract's address, portal contract address, and an array of ContractFunctionDao objects.
 * Each ContractFunctionDao object includes FunctionAbi data and the function selector buffer.
 */
export class ContractDao {
    constructor(contractArtifact, instance) {
        this.contractArtifact = contractArtifact;
        this.instance = instance;
        this.functions = contractArtifact.functions.map(f => ({
            ...f,
            selector: FunctionSelector.fromNameAndParameters(f.name, f.parameters),
        }));
    }
    get aztecNrVersion() {
        return this.contractArtifact.aztecNrVersion;
    }
    get name() {
        return this.contractArtifact.name;
    }
    get events() {
        return this.contractArtifact.events;
    }
    get fileMap() {
        return this.contractArtifact.fileMap;
    }
    getFunctionArtifact(selector) {
        return this.functions.find(f => f.selector.equals(selector));
    }
    getFunctionArtifactByName(functionName) {
        return this.functions.find(f => f.name === functionName);
    }
    getFunctionDebugMetadataByName(functionName) {
        const fn = this.getFunctionArtifactByName(functionName);
        return fn && getFunctionDebugMetadata(this, fn);
    }
    toBuffer() {
        // the contract artifact was originally emitted to a JSON file by Noir
        // should be safe to JSON.stringify it (i.e. it doesn't contain BigInts)
        const contractArtifactJson = JSON.stringify(this.contractArtifact);
        const buf = Buffer.concat([
            this.instance.address.toBuffer(),
            new SerializableContractInstance(this.instance).toBuffer(),
            prefixBufferWithLength(Buffer.from(contractArtifactJson, 'utf-8')),
        ]);
        return buf;
    }
    static fromBuffer(buf) {
        const reader = BufferReader.asReader(buf);
        const address = AztecAddress.fromBuffer(reader);
        const instance = SerializableContractInstance.fromBuffer(reader).withAddress(address);
        const contractArtifact = JSON.parse(reader.readString());
        return new ContractDao(contractArtifact, instance);
    }
}
/**
 * Return public functions from the newly deployed contract to be injected into the tx object.
 * @param newContract - The new contract
 * @returns List of EncodedContractFunction.
 */
export function getNewContractPublicFunctions(newContract) {
    return newContract.functions
        .filter(c => c.functionType === FunctionType.OPEN)
        .map(fn => new EncodedContractFunction(FunctionSelector.fromNameAndParameters(fn.name, fn.parameters), fn.isInternal ?? false, Buffer.from(fn.bytecode, 'base64')));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udHJhY3RfZGFvLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2NvbnRyYWN0X2Rhby50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsWUFBWSxFQUF1QixNQUFNLG9CQUFvQixDQUFDO0FBQ3ZFLE9BQU8sRUFLTCxnQkFBZ0IsRUFDaEIsWUFBWSxFQUNaLHdCQUF3QixHQUN6QixNQUFNLHVCQUF1QixDQUFDO0FBQy9CLE9BQU8sRUFBRSxZQUFZLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUNuRixPQUFPLEVBQStCLDRCQUE0QixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFFbkcsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFN0Q7Ozs7R0FJRztBQUNILE1BQU0sT0FBTyxXQUFXO0lBSXRCLFlBQW9CLGdCQUFrQyxFQUFrQixRQUFxQztRQUF6RixxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWtCO1FBQWtCLGFBQVEsR0FBUixRQUFRLENBQTZCO1FBQzNHLElBQUksQ0FBQyxTQUFTLEdBQUcsZ0JBQWdCLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7WUFDcEQsR0FBRyxDQUFDO1lBQ0osUUFBUSxFQUFFLGdCQUFnQixDQUFDLHFCQUFxQixDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLFVBQVUsQ0FBQztTQUN2RSxDQUFDLENBQUMsQ0FBQztJQUNOLENBQUM7SUFFRCxJQUFJLGNBQWM7UUFDaEIsT0FBTyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsY0FBYyxDQUFDO0lBQzlDLENBQUM7SUFFRCxJQUFJLElBQUk7UUFDTixPQUFPLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUM7SUFDcEMsQ0FBQztJQUVELElBQUksTUFBTTtRQUNSLE9BQU8sSUFBSSxDQUFDLGdCQUFnQixDQUFDLE1BQU0sQ0FBQztJ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