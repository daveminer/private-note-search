/// <reference types="node" resolution-mode="require"/>
import { ContractFunctionDao } from '@aztec/circuits.js';
import { ContractArtifact, DebugFileMap, EventAbi, FunctionDebugMetadata, FunctionSelector } from '@aztec/foundation/abi';
import { BufferReader } from '@aztec/foundation/serialize';
import { ContractInstanceWithAddress } from '@aztec/types/contracts';
import { EncodedContractFunction } from './contract_data.js';
/**
 * A contract Data Access Object (DAO).
 * Contains the contract's address, portal contract address, and an array of ContractFunctionDao objects.
 * Each ContractFunctionDao object includes FunctionAbi data and the function selector buffer.
 */
export declare class ContractDao implements ContractArtifact {
    private contractArtifact;
    readonly instance: ContractInstanceWithAddress;
    /** An array of contract functions with additional selector property.  */
    readonly functions: ContractFunctionDao[];
    constructor(contractArtifact: ContractArtifact, instance: ContractInstanceWithAddress);
    get aztecNrVersion(): string | undefined;
    get name(): string;
    get events(): EventAbi[];
    get fileMap(): DebugFileMap;
    getFunctionArtifact(selector: FunctionSelector): ContractFunctionDao | undefined;
    getFunctionArtifactByName(functionName: string): ContractFunctionDao | undefined;
    getFunctionDebugMetadataByName(functionName: string): FunctionDebugMetadata | undefined;
    toBuffer(): Buffer;
    static fromBuffer(buf: Uint8Array | BufferReader): ContractDao;
}
/**
 * Return public functions from the newly deployed contract to be injected into the tx object.
 * @param newContract - The new contract
 * @returns List of EncodedContractFunction.
 */
export declare function getNewContractPublicFunctions(newContract: ContractDao): EncodedContractFunction[];
//# sourceMappingURL=contract_dao.d.ts.map