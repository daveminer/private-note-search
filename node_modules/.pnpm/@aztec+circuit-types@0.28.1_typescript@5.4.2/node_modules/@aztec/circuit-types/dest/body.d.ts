/// <reference types="node" resolution-mode="require"/>
/// <reference types="node" resolution-mode="require"/>
import { L2BlockL2Logs, TxEffect } from '@aztec/circuit-types';
import { NUMBER_OF_L1_L2_MESSAGES_PER_ROLLUP } from '@aztec/circuits.js';
import { Fr } from '@aztec/foundation/fields';
import { BufferReader, Tuple } from '@aztec/foundation/serialize';
import { inspect } from 'util';
export declare class Body {
    l1ToL2Messages: Tuple<Fr, typeof NUMBER_OF_L1_L2_MESSAGES_PER_ROLLUP>;
    txEffects: TxEffect[];
    constructor(l1ToL2Messages: Tuple<Fr, typeof NUMBER_OF_L1_L2_MESSAGES_PER_ROLLUP>, txEffects: TxEffect[]);
    /**
     * Serializes a block body
     * @returns A serialized L2 block body.
     */
    toBuffer(): Buffer;
    /**
     * Deserializes a block from a buffer
     * @returns A deserialized L2 block.
     */
    static fromBuffer(buf: Buffer | BufferReader): Body;
    [inspect.custom](): string;
    /**
     * Computes the transactions effects hash for the L2 block
     * This hash is also computed in the `AvailabilityOracle` and the `Circuit`.
     * @returns The txs effects hash.
     */
    getTxsEffectsHash(): Buffer;
    get encryptedLogs(): L2BlockL2Logs;
    get unencryptedLogs(): L2BlockL2Logs;
    get numberOfTxs(): number;
    static random(txsPerBlock?: number, numPrivateCallsPerTx?: number, numPublicCallsPerTx?: number, numEncryptedLogsPerCall?: number, numUnencryptedLogsPerCall?: number, numL1ToL2MessagesPerCall?: number): Body;
}
//# sourceMappingURL=body.d.ts.map