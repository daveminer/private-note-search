import { EthAddress } from '@aztec/foundation/eth-address';
import { Fr } from '@aztec/foundation/fields';
import { BufferReader, numToUInt8, serializeToBuffer } from '@aztec/foundation/serialize';
const VERSION = 1;
export class SerializableContractInstance {
    constructor(instance) {
        this.version = VERSION;
        if (instance.version !== VERSION) {
            throw new Error(`Unexpected contract class version ${instance.version}`);
        }
        this.salt = instance.salt;
        this.contractClassId = instance.contractClassId;
        this.initializationHash = instance.initializationHash;
        this.portalContractAddress = instance.portalContractAddress;
        this.publicKeysHash = instance.publicKeysHash;
    }
    toBuffer() {
        return serializeToBuffer(numToUInt8(this.version), this.salt, this.contractClassId, this.initializationHash, this.portalContractAddress, this.publicKeysHash);
    }
    /** Returns a copy of this object with its address included. */
    withAddress(address) {
        return { ...this, address };
    }
    static fromBuffer(bufferOrReader) {
        const reader = BufferReader.asReader(bufferOrReader);
        return new SerializableContractInstance({
            version: reader.readUInt8(),
            salt: reader.readObject(Fr),
            contractClassId: reader.readObject(Fr),
            initializationHash: reader.readObject(Fr),
            portalContractAddress: reader.readObject(EthAddress),
            publicKeysHash: reader.readObject(Fr),
        });
    }
    static random() {
        return new SerializableContractInstance({
            version: VERSION,
            salt: Fr.random(),
            contractClassId: Fr.random(),
            initializationHash: Fr.random(),
            portalContractAddress: EthAddress.random(),
            publicKeysHash: Fr.random(),
        });
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udHJhY3RfaW5zdGFuY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY29udHJhY3RzL2NvbnRyYWN0X2luc3RhbmNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUMzRCxPQUFPLEVBQUUsRUFBRSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDOUMsT0FBTyxFQUFFLFlBQVksRUFBRSxVQUFVLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUUxRixNQUFNLE9BQU8sR0FBRyxDQUFVLENBQUM7QUFvQjNCLE1BQU0sT0FBTyw0QkFBNEI7SUFRdkMsWUFBWSxRQUEwQjtRQVB0QixZQUFPLEdBQUcsT0FBTyxDQUFDO1FBUWhDLElBQUksUUFBUSxDQUFDLE9BQU8sS0FBSyxPQUFPLEVBQUUsQ0FBQztZQUNqQyxNQUFNLElBQUksS0FBSyxDQUFDLHFDQUFxQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQztRQUMzRSxDQUFDO1FBQ0QsSUFBSSxDQUFDLElBQUksR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDO1FBQzFCLElBQUksQ0FBQyxlQUFlLEdBQUcsUUFBUSxDQUFDLGVBQWUsQ0FBQztRQUNoRCxJQUFJLENBQUMsa0JBQWtCLEdBQUcsUUFBUSxDQUFDLGtCQUFrQixDQUFDO1FBQ3RELElBQUksQ0FBQyxxQkFBcUIsR0FBRyxRQUFRLENBQUMscUJBQXFCLENBQUM7UUFDNUQsSUFBSSxDQUFDLGNBQWMsR0FBRyxRQUFRLENBQUMsY0FBYyxDQUFDO0lBQ2hELENBQUM7SUFFTSxRQUFRO1FBQ2IsT0FBTyxpQkFBaUIsQ0FDdEIsVUFBVSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsRUFDeEIsSUFBSSxDQUFDLElBQUksRUFDVCxJQUFJLENBQUMsZUFBZSxFQUNwQixJQUFJLENBQUMsa0JBQWtCLEVBQ3ZCLElBQUksQ0FBQyxxQkFBcUIsRUFDMUIsSUFBSSxDQUFDLGNBQWMsQ0FDcEIsQ0FBQztJQUNKLENBQUM7SUFFRCwrREFBK0Q7SUFDL0QsV0FBVyxDQUFDLE9BQXFCO1FBQy9CLE9BQU8sRUFBRSxHQUFHLElBQUksRUFBRSxPQUFPLEVBQUUsQ0FBQztJQUM5QixDQUFDO0lBRUQsTUFBTSxDQUFDLFVBQVUsQ0FBQyxjQUFxQztRQUNyRCxNQUFNLE1BQU0sR0FBRyxZQUFZLENBQUMsUUFBUSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQ3JELE9BQU8sSUFBSSw0QkFBNEIsQ0FBQztZQUN0QyxPQUFPLEVBQUUsTUFBTSxDQUFDLFNBQVMsRUFBb0I7WUFDN0MsSUFBSSxFQUFFLE1BQU0sQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDO1lBQzNCLGVBQWUsRUFBRSxNQUFNLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQztZQUN0QyxrQkFBa0IsRUFBRSxNQUFNLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQztZQUN6QyxxQkFBcUIsRUFBRSxNQUFNLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQztZQUNwRCxjQUFjLEVBQUUsTUFBTSxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUM7U0FDdEMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELE1BQU0sQ0FBQyxNQUFNO1FBQ1gsT0FBTyxJQUFJLDRCQUE0QixDQUFDO1lBQ3RDLE9BQU8sRUFBRSxPQUFPO1lBQ2hCLElBQUksRUFBRSxFQUFFLENBQUMsTUFBTSxFQUFFO1lBQ2pCLGVBQWUsRUFBRSxFQUFFLENBQUMsTUFBTSxFQUFFO1lBQzVCLGtCQUFrQixFQUFFLEVBQUUsQ0FBQyxNQUFNLEVBQUU7WUFDL0IscUJBQXFCLEVBQUUsVUFBVSxDQUFDLE1BQU0sRUFBRTtZQUMxQyxjQUFjLEVBQUUsRUFBRSxDQUFDLE1BQU0sRUFBRTtTQUM1QixDQUFDLENBQUM7SUFDTCxDQUFDO0NBQ0YifQ==