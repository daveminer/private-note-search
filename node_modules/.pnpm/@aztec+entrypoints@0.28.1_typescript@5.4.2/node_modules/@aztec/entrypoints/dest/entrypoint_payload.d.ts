import { FeeOptions } from '@aztec/aztec.js/account';
import { Fr } from '@aztec/aztec.js/fields';
import { FunctionCall, PackedArguments } from '@aztec/circuit-types';
import { AztecAddress } from '@aztec/circuits.js';
/** Encoded function call for account contract entrypoint */
type EntrypointFunctionCall = {
    /** Arguments hash for the call */
    args_hash: Fr;
    /** Selector of the function to call */
    function_selector: Fr;
    /** Address of the contract to call */
    target_address: Fr;
    /** Whether the function is public or private */
    is_public: boolean;
};
/** Encoded payload for the account contract entrypoint */
type EntrypointPayload = {
    /** Encoded function calls to execute */
    function_calls: EntrypointFunctionCall[];
    /** A nonce for replay protection */
    nonce: Fr;
};
/** Represents a generic payload to be executed in the context of an account contract */
export type PayloadWithArguments = {
    /** The payload to be run */
    payload: EntrypointPayload;
    /** The packed arguments for the function calls */
    packedArguments: PackedArguments[];
};
/** builds the payload for a Dapp entrypoint */
export declare function buildDappPayload(call: FunctionCall): PayloadWithArguments;
/** Assembles an entrypoint app payload from a set of private and public function calls */
export declare function buildAppPayload(calls: FunctionCall[]): PayloadWithArguments;
/** Creates the payload for paying the fee for a transaction */
export declare function buildFeePayload(feeOpts?: FeeOptions): Promise<PayloadWithArguments>;
/** Hashes a payload to a 32-byte buffer */
export declare function hashPayload(payload: EntrypointPayload, generatorIndex: number): Fr;
/** Hash the payload for a dapp */
export declare function hashDappPayload(payload: EntrypointPayload, userAddress: AztecAddress, generatorIndex: number): Fr;
export {};
//# sourceMappingURL=entrypoint_payload.d.ts.map