/* Autogenerated file, do not edit! */
/* eslint-disable */
import { Contract, ContractBase, DeployMethod, Point, loadContractArtifact, } from '@aztec/aztec.js';
import AppSubscriptionContractArtifactJson from '../artifacts/app_subscription_contract-AppSubscription.json' assert { type: 'json' };
export const AppSubscriptionContractArtifact = loadContractArtifact(AppSubscriptionContractArtifactJson);
/**
 * Type-safe interface for contract AppSubscription;
 */
export class AppSubscriptionContract extends ContractBase {
    constructor(instance, wallet) {
        super(instance, AppSubscriptionContractArtifact, wallet);
    }
    /**
     * Creates a contract instance.
     * @param address - The deployed contract's address.
     * @param wallet - The wallet to use when interacting with the contract.
     * @returns A promise that resolves to a new Contract instance.
     */
    static async at(address, wallet) {
        return Contract.at(address, AppSubscriptionContract.artifact, wallet);
    }
    /**
     * Creates a tx to deploy a new instance of this contract.
     */
    static deploy(wallet, target_address, subscription_recipient_address, subscription_token_address, subscription_price, gas_token_address) {
        return new DeployMethod(Point.ZERO, wallet, AppSubscriptionContractArtifact, AppSubscriptionContract.at, Array.from(arguments).slice(1));
    }
    /**
     * Creates a tx to deploy a new instance of this contract using the specified public key to derive the address.
     */
    static deployWithPublicKey(publicKey, wallet, target_address, subscription_recipient_address, subscription_token_address, subscription_price, gas_token_address) {
        return new DeployMethod(publicKey, wallet, AppSubscriptionContractArtifact, AppSubscriptionContract.at, Array.from(arguments).slice(2));
    }
    /**
     * Creates a tx to deploy a new instance of this contract using the specified constructor method.
     */
    static deployWithOpts(opts, ...args) {
        return new DeployMethod(opts.publicKey ?? Point.ZERO, opts.wallet, AppSubscriptionContractArtifact, AppSubscriptionContract.at, Array.from(arguments).slice(1), opts.method ?? 'constructor');
    }
    /**
     * Returns this contract's artifact.
     */
    static get artifact() {
        return AppSubscriptionContractArtifact;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXBwU3Vic2NyaXB0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL0FwcFN1YnNjcmlwdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxzQ0FBc0M7QUFFdEMsb0JBQW9CO0FBQ3BCLE9BQU8sRUFJTCxRQUFRLEVBRVIsWUFBWSxFQUlaLFlBQVksRUFPWixLQUFLLEVBSUwsb0JBQW9CLEdBQ3JCLE1BQU0saUJBQWlCLENBQUM7QUFFekIsT0FBTyxtQ0FBbUMsTUFBTSw2REFBNkQsQ0FBQyxTQUFTLElBQUksRUFBRSxNQUFNLEVBQUUsQ0FBQztBQUV0SSxNQUFNLENBQUMsTUFBTSwrQkFBK0IsR0FBRyxvQkFBb0IsQ0FDakUsbUNBQTJELENBQzVELENBQUM7QUFFRjs7R0FFRztBQUNILE1BQU0sT0FBTyx1QkFBd0IsU0FBUSxZQUFZO0lBQ3ZELFlBQW9CLFFBQXFDLEVBQUUsTUFBYztRQUN2RSxLQUFLLENBQUMsUUFBUSxFQUFFLCtCQUErQixFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQzNELENBQUM7SUFFRDs7Ozs7T0FLRztJQUNJLE1BQU0sQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLE9BQXFCLEVBQUUsTUFBYztRQUMxRCxPQUFPLFFBQVEsQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLHVCQUF1QixDQUFDLFFBQVEsRUFBRSxNQUFNLENBQXFDLENBQUM7SUFDNUcsQ0FBQztJQUVEOztPQUVHO0lBQ0ksTUFBTSxDQUFDLE1BQU0sQ0FDbEIsTUFBYyxFQUNkLGNBQWdDLEVBQ2hDLDhCQUFnRCxFQUNoRCwwQkFBNEMsRUFDNUMsa0JBQTZCLEVBQzdCLGlCQUFtQztRQUVuQyxPQUFPLElBQUksWUFBWSxDQUNyQixLQUFLLENBQUMsSUFBSSxFQUNWLE1BQU0sRUFDTiwrQkFBK0IsRUFDL0IsdUJBQXVCLENBQUMsRUFBRSxFQUMxQixLQUFLLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FDL0IsQ0FBQztJQUNKLENBQUM7SUFFRDs7T0FFRztJQUNJLE1BQU0sQ0FBQyxtQkFBbUIsQ0FDL0IsU0FBb0IsRUFDcEIsTUFBYyxFQUNkLGNBQWdDLEVBQ2hDLDhCQUFnRCxFQUNoRCwwQkFBNEMsRUFDNUMsa0JBQTZCLEVBQzdCLGlCQUFtQztRQUVuQyxPQUFPLElBQUksWUFBWSxDQUNyQixTQUFTLEVBQ1QsTUFBTSxFQUNOLCtCQUErQixFQUMvQix1QkFBdUIsQ0FBQyxFQUFFLEVBQzFCLEtBQUssQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUMvQixDQUFDO0lBQ0osQ0FBQztJQUVEOztPQUVHO0lBQ0ksTUFBTSxDQUFDLGNBQWMsQ0FDMUIsSUFBMkQsRUFDM0QsR0FBRyxJQUF1RDtRQUUxRCxPQUFPLElBQUksWUFBWSxDQUNyQixJQUFJLENBQUMsU0FBUyxJQUFJLEtBQUssQ0FBQyxJQUFJLEVBQzVCLElBQUksQ0FBQyxNQUFNLEVBQ1gsK0JBQStCLEVBQy9CLHVCQUF1QixDQUFDLEVBQUUsRUFDMUIsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQzlCLElBQUksQ0FBQyxNQUFNLElBQUksYUFBYSxDQUM3QixDQUFDO0lBQ0osQ0FBQztJQUVEOztPQUVHO0lBQ0ksTUFBTSxLQUFLLFFBQVE7UUFDeEIsT0FBTywrQkFBK0IsQ0FBQztJQUN6QyxDQUFDO0NBb0RGIn0=