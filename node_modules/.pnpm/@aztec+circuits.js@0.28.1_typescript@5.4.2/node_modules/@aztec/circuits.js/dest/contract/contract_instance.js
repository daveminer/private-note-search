import { getDefaultInitializer } from '@aztec/foundation/abi';
import { EthAddress } from '@aztec/foundation/eth-address';
import { Fr, Point } from '@aztec/foundation/fields';
import { getContractClassFromArtifact } from '../contract/contract_class.js';
import { computeContractClassId } from '../contract/contract_class_id.js';
import { computeContractAddressFromInstance, computeInitializationHash, computePublicKeysHash, } from './contract_address.js';
/**
 * Generates a Contract Instance from the deployment params.
 * @param artifact - The account contract build artifact.
 * @param opts - Options for the deployment.
 * @returns - The contract instance
 */
export function getContractInstanceFromDeployParams(artifact, opts) {
    const args = opts.constructorArgs ?? [];
    const salt = opts.salt ?? Fr.random();
    const publicKey = opts.publicKey ?? Point.ZERO;
    const portalContractAddress = opts.portalAddress ?? EthAddress.ZERO;
    const constructorArtifact = getConstructorArtifact(artifact, opts.constructorArtifact);
    const contractClass = getContractClassFromArtifact(artifact);
    const contractClassId = computeContractClassId(contractClass);
    const initializationHash = computeInitializationHash(constructorArtifact, args);
    const publicKeysHash = computePublicKeysHash(publicKey);
    const instance = {
        contractClassId,
        initializationHash,
        portalContractAddress,
        publicKeysHash,
        salt,
        version: 1,
    };
    return { ...instance, address: computeContractAddressFromInstance(instance) };
}
function getConstructorArtifact(artifact, requestedConstructorArtifact) {
    if (typeof requestedConstructorArtifact === 'string') {
        const found = artifact.functions.find(fn => fn.name === requestedConstructorArtifact);
        if (!found) {
            throw new Error(`No constructor found with name ${requestedConstructorArtifact}`);
        }
        return found;
    }
    return requestedConstructorArtifact ?? getDefaultInitializer(artifact);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udHJhY3RfaW5zdGFuY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY29udHJhY3QvY29udHJhY3RfaW5zdGFuY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFzQyxxQkFBcUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ2xHLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUMzRCxPQUFPLEVBQUUsRUFBRSxFQUFFLEtBQUssRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBR3JELE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQzdFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBRTFFLE9BQU8sRUFDTCxrQ0FBa0MsRUFDbEMseUJBQXlCLEVBQ3pCLHFCQUFxQixHQUN0QixNQUFNLHVCQUF1QixDQUFDO0FBRS9COzs7OztHQUtHO0FBQ0gsTUFBTSxVQUFVLG1DQUFtQyxDQUNqRCxRQUEwQixFQUMxQixJQU1DO0lBRUQsTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLGVBQWUsSUFBSSxFQUFFLENBQUM7SUFDeEMsTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksSUFBSSxFQUFFLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDdEMsTUFBTSxTQUFTLEdBQUcsSUFBSSxDQUFDLFNBQVMsSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDO0lBQy9DLE1BQU0scUJBQXFCLEdBQUcsSUFBSSxDQUFDLGFBQWEsSUFBSSxVQUFVLENBQUMsSUFBSSxDQUFDO0lBQ3BFLE1BQU0sbUJBQW1CLEdBQUcsc0JBQXNCLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO0lBRXZGLE1BQU0sYUFBYSxHQUFHLDRCQUE0QixDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzdELE1BQU0sZUFBZSxHQUFHLHNCQUFzQixDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQzlELE1BQU0sa0JBQWtCLEdBQUcseUJBQXlCLENBQUMsbUJBQW1CLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDaEYsTUFBTSxjQUFjLEdBQUcscUJBQXFCLENBQUMsU0FBUyxDQUFDLENBQUM7SUFFeEQsTUFBTSxRQUFRLEdBQXFCO1FBQ2pDLGVBQWU7UUFDZixrQkFBa0I7UUFDbEIscUJBQXFCO1FBQ3JCLGNBQWM7UUFDZCxJQUFJO1FBQ0osT0FBTyxFQUFFLENBQUM7S0FDWCxDQUFDO0lBRUYsT0FBTyxFQUFFLEdBQUcsUUFBUSxFQUFFLE9BQU8sRUFBRSxrQ0FBa0MsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDO0FBQ2hGLENBQUM7QUFFRCxTQUFTLHNCQUFzQixDQUM3QixRQUEwQixFQUMxQiw0QkFBbUU7SUFFbkUsSUFBSSxPQUFPLDRCQUE0QixLQUFLLFFBQVEsRUFBRSxDQUFDO1FBQ3JELE1BQU0sS0FBSyxHQUFHLFFBQVEsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLElBQUksS0FBSyw0QkFBNEIsQ0FBQyxDQUFDO1FBQ3RGLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztZQUNYLE1BQU0sSUFBSSxLQUFLLENBQUMsa0NBQWtDLDRCQUE0QixFQUFFLENBQUMsQ0FBQztRQUNwRixDQUFDO1FBQ0QsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDO0lBQ0QsT0FBTyw0QkFBNEIsSUFBSSxxQkFBcUIsQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUN6RSxDQUFDIn0=