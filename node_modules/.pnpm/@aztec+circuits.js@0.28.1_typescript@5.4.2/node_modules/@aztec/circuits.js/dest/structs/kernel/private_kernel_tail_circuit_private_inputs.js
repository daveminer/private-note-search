import { BufferReader, serializeToBuffer } from '@aztec/foundation/serialize';
import { MAX_NEW_NOTE_HASHES_PER_TX, MAX_NEW_NULLIFIERS_PER_TX, MAX_NOTE_HASH_READ_REQUESTS_PER_TX, MAX_NULLIFIER_KEY_VALIDATION_REQUESTS_PER_TX, } from '../../constants.gen.js';
import { Fr, GrumpkinScalar } from '../index.js';
import { nullifierReadRequestHintsFromBuffer } from '../read_request_hints.js';
import { SideEffect, SideEffectLinkedToNoteHash } from '../side_effects.js';
import { PrivateKernelInnerData } from './private_kernel_inner_data.js';
/**
 * Input to the private kernel circuit - tail call.
 */
export class PrivateKernelTailCircuitPrivateInputs {
    constructor(
    /**
     * The previous kernel data
     */
    previousKernel, 
    /**
     * The sorted new note hashes.
     */
    sortedNewNoteHashes, 
    /**
     * The sorted new note hashes indexes. Maps original to sorted.
     */
    sortedNewNoteHashesIndexes, 
    /**
     * Contains hints for the transient read requests to localize corresponding commitments.
     */
    readCommitmentHints, 
    /**
     * The sorted new nullifiers. Maps original to sorted.
     */
    sortedNewNullifiers, 
    /**
     * The sorted new nullifiers indexes.
     */
    sortedNewNullifiersIndexes, 
    /**
     * Contains hints for the nullifier read requests to locate corresponding pending or settled nullifiers.
     */
    nullifierReadRequestHints, 
    /**
     * Contains hints for the transient nullifiers to localize corresponding commitments.
     */
    nullifierCommitmentHints, 
    /**
     * The master nullifier secret keys for the nullifier key validation requests.
     */
    masterNullifierSecretKeys) {
        this.previousKernel = previousKernel;
        this.sortedNewNoteHashes = sortedNewNoteHashes;
        this.sortedNewNoteHashesIndexes = sortedNewNoteHashesIndexes;
        this.readCommitmentHints = readCommitmentHints;
        this.sortedNewNullifiers = sortedNewNullifiers;
        this.sortedNewNullifiersIndexes = sortedNewNullifiersIndexes;
        this.nullifierReadRequestHints = nullifierReadRequestHints;
        this.nullifierCommitmentHints = nullifierCommitmentHints;
        this.masterNullifierSecretKeys = masterNullifierSecretKeys;
    }
    /**
     * Serialize this as a buffer.
     * @returns The buffer.
     */
    toBuffer() {
        return serializeToBuffer(this.previousKernel, this.sortedNewNoteHashes, this.sortedNewNoteHashesIndexes, this.readCommitmentHints, this.sortedNewNullifiers, this.sortedNewNullifiersIndexes, this.nullifierReadRequestHints, this.nullifierCommitmentHints, this.masterNullifierSecretKeys);
    }
    /**
     * Deserializes from a buffer or reader.
     * @param buffer - Buffer or reader to read from.
     * @returns The deserialized instance.
     */
    static fromBuffer(buffer) {
        const reader = BufferReader.asReader(buffer);
        return new PrivateKernelTailCircuitPrivateInputs(reader.readObject(PrivateKernelInnerData), reader.readArray(MAX_NEW_NOTE_HASHES_PER_TX, SideEffect), reader.readNumbers(MAX_NEW_NOTE_HASHES_PER_TX), reader.readArray(MAX_NOTE_HASH_READ_REQUESTS_PER_TX, Fr), reader.readArray(MAX_NEW_NULLIFIERS_PER_TX, SideEffectLinkedToNoteHash), reader.readNumbers(MAX_NEW_NULLIFIERS_PER_TX), reader.readObject({ fromBuffer: nullifierReadRequestHintsFromBuffer }), reader.readArray(MAX_NEW_NULLIFIERS_PER_TX, Fr), reader.readArray(MAX_NULLIFIER_KEY_VALIDATION_REQUESTS_PER_TX, GrumpkinScalar));
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJpdmF0ZV9rZXJuZWxfdGFpbF9jaXJjdWl0X3ByaXZhdGVfaW5wdXRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3N0cnVjdHMva2VybmVsL3ByaXZhdGVfa2VybmVsX3RhaWxfY2lyY3VpdF9wcml2YXRlX2lucHV0cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFTLGlCQUFpQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFFckYsT0FBTyxFQUNMLDBCQUEwQixFQUMxQix5QkFBeUIsRUFDekIsa0NBQWtDLEVBQ2xDLDRDQUE0QyxHQUM3QyxNQUFNLHdCQUF3QixDQUFDO0FBRWhDLE9BQU8sRUFBRSxFQUFFLEVBQUUsY0FBYyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQ2pELE9BQU8sRUFBNkIsbUNBQW1DLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUMxRyxPQUFPLEVBQUUsVUFBVSxFQUFFLDBCQUEwQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDNUUsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFFeEU7O0dBRUc7QUFDSCxNQUFNLE9BQU8scUNBQXFDO0lBQ2hEO0lBQ0U7O09BRUc7SUFDSSxjQUFzQztJQUM3Qzs7T0FFRztJQUNJLG1CQUF5RTtJQUNoRjs7T0FFRztJQUNJLDBCQUE0RTtJQUNuRjs7T0FFRztJQUNJLG1CQUF5RTtJQUNoRjs7T0FFRztJQUNJLG1CQUF3RjtJQUMvRjs7T0FFRztJQUNJLDBCQUEyRTtJQUNsRjs7T0FFRztJQUNJLHlCQUFvRDtJQUMzRDs7T0FFRztJQUNJLHdCQUFxRTtJQUM1RTs7T0FFRztJQUNJLHlCQUF5RztRQWhDekcsbUJBQWMsR0FBZCxjQUFjLENBQXdCO1FBSXRDLHdCQUFtQixHQUFuQixtQkFBbUIsQ0FBc0Q7UUFJekUsK0JBQTBCLEdBQTFCLDBCQUEwQixDQUFrRDtRQUk1RSx3QkFBbUIsR0FBbkIsbUJBQW1CLENBQXNEO1FBSXpFLHdCQUFtQixHQUFuQixtQkFBbUIsQ0FBcUU7UUFJeEYsK0JBQTBCLEdBQTFCLDBCQUEwQixDQUFpRDtRQUkzRSw4QkFBeUIsR0FBekIseUJBQXlCLENBQTJCO1FBSXBELDZCQUF3QixHQUF4Qix3QkFBd0IsQ0FBNkM7UUFJckUsOEJBQXlCLEdBQXpCLHlCQUF5QixDQUFnRjtJQUMvRyxDQUFDO0lBRUo7OztPQUdHO0lBQ0gsUUFBUTtRQUNOLE9BQU8saUJBQWlCLENBQ3RCLElBQUksQ0FBQyxjQUFjLEVBQ25CLElBQUksQ0FBQyxtQkFBbUIsRUFDeEIsSUFBSSxDQUFDLDBCQUEwQixFQUMvQixJQUFJLENBQUMsbUJBQW1CLEVBQ3hCLElBQUksQ0FBQyxtQkFBbUIsRUFDeEIsSUFBSSxDQUFDLDBCQUEwQixFQUMvQixJQUFJLENBQUMseUJBQXlCLEVBQzlCLElBQUksQ0FBQyx3QkFBd0IsRUFDN0IsSUFBSSxDQUFDLHlCQUF5QixDQUMvQixDQUFDO0lBQ0osQ0FBQztJQUVEOzs7O09BSUc7SUFDSCxNQUFNLENBQUMsVUFBVSxDQUFDLE1BQTZCO1FBQzdDLE1BQU0sTUFBTSxHQUFHLFlBQVksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDN0MsT0FBTyxJQUFJLHFDQUFxQyxDQUM5QyxNQUFNLENBQUMsVUFBVSxDQUFDLHNCQUFzQixDQUFDLEVBQ3pDLE1BQU0sQ0FBQyxTQUFTLENBQUMsMEJBQTBCLEVBQUUsVUFBVSxDQUFDLEVBQ3hELE1BQU0sQ0FBQyxXQUFXLENBQUMsMEJBQTBCLENBQUMsRUFDOUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxrQ0FBa0MsRUFBRSxFQUFFLENBQUMsRUFDeEQsTUFBTSxDQUFDLFNBQVMsQ0FBQyx5QkFBeUIsRUFBRSwwQkFBMEIsQ0FBQyxFQUN2RSxNQUFNLENBQUMsV0FBVyxDQUFDLHlCQUF5QixDQUFDLEVBQzdDLE1BQU0sQ0FBQyxVQUFVLENBQUMsRUFBRSxVQUFVLEVBQUUsbUNBQW1DLEVBQUUsQ0FBQyxFQUN0RSxNQUFNLENBQUMsU0FBUyxDQUFDLHlCQUF5QixFQUFFLEVBQUUsQ0FBQyxFQUMvQyxNQUFNLENBQUMsU0FBUyxDQUFDLDRDQUE0QyxFQUFFLGNBQWMsQ0FBQyxDQUMvRSxDQUFDO0lBQ0osQ0FBQztDQUNGIn0=