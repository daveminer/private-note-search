/// <reference types="node" resolution-mode="require"/>
import { AztecAddress } from '@aztec/foundation/aztec-address';
import { Fr, Point } from '@aztec/foundation/fields';
import { BufferReader, FieldReader } from '@aztec/foundation/serialize';
import { GrumpkinPrivateKey } from '../types/grumpkin_private_key.js';
/**
 * Request for validating a nullifier key pair used in the app.
 */
export declare class NullifierKeyValidationRequest {
    /**
     * Public key of the nullifier key.
     */
    readonly publicKey: Point;
    /**
     * Secret key of the nullifier key.
     */
    readonly secretKey: GrumpkinPrivateKey;
    constructor(
    /**
     * Public key of the nullifier key.
     */
    publicKey: Point, 
    /**
     * Secret key of the nullifier key.
     */
    secretKey: GrumpkinPrivateKey);
    toBuffer(): Buffer;
    static fromBuffer(buffer: Buffer | BufferReader): NullifierKeyValidationRequest;
    toFields(): Fr[];
    static fromFields(fields: Fr[] | FieldReader): NullifierKeyValidationRequest;
    isEmpty(): boolean;
    static empty(): NullifierKeyValidationRequest;
}
/**
 * Request for validating a nullifier key pair used in the app.
 */
export declare class NullifierKeyValidationRequestContext {
    /**
     * Public key of the nullifier key.
     */
    readonly publicKey: Point;
    /**
     * Secret key of the nullifier key.
     */
    readonly secretKey: GrumpkinPrivateKey;
    /**
     * The storage contract address the nullifier key is for.
     */
    readonly contractAddress: AztecAddress;
    constructor(
    /**
     * Public key of the nullifier key.
     */
    publicKey: Point, 
    /**
     * Secret key of the nullifier key.
     */
    secretKey: GrumpkinPrivateKey, 
    /**
     * The storage contract address the nullifier key is for.
     */
    contractAddress: AztecAddress);
    toBuffer(): Buffer;
    static fromBuffer(buffer: Buffer | BufferReader): NullifierKeyValidationRequestContext;
    toFields(): Fr[];
    static fromFields(fields: Fr[] | FieldReader): NullifierKeyValidationRequestContext;
    isEmpty(): boolean;
    static empty(): NullifierKeyValidationRequestContext;
}
//# sourceMappingURL=nullifier_key_validation_request.d.ts.map