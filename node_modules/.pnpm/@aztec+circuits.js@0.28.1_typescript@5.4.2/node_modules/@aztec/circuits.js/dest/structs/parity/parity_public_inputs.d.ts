/// <reference types="node" resolution-mode="require"/>
import { Fr } from '@aztec/foundation/fields';
import { BufferReader } from '@aztec/foundation/serialize';
import { FieldsOf } from '@aztec/foundation/types';
import { AggregationObject } from '../aggregation_object.js';
export declare class ParityPublicInputs {
    /** Aggregated proof of all the parity circuit iterations. */
    aggregationObject: AggregationObject;
    /** Root of the SHA256 tree. */
    shaRoot: Buffer;
    /** Root of the converted tree. */
    convertedRoot: Fr;
    constructor(
    /** Aggregated proof of all the parity circuit iterations. */
    aggregationObject: AggregationObject, 
    /** Root of the SHA256 tree. */
    shaRoot: Buffer, 
    /** Root of the converted tree. */
    convertedRoot: Fr);
    toBuffer(): Buffer;
    static from(fields: FieldsOf<ParityPublicInputs>): ParityPublicInputs;
    static getFields(fields: FieldsOf<ParityPublicInputs>): readonly [AggregationObject, Buffer, Fr];
    static fromBuffer(buffer: Buffer | BufferReader): ParityPublicInputs;
}
//# sourceMappingURL=parity_public_inputs.d.ts.map