/// <reference types="node" resolution-mode="require"/>
import { Fr } from '@aztec/foundation/fields';
import { BufferReader, Tuple } from '@aztec/foundation/serialize';
import { NUMBER_OF_L1_L2_MESSAGES_PER_ROLLUP, NUM_MSGS_PER_BASE_PARITY } from '../../constants.gen.js';
export declare class BaseParityInputs {
    /** Aggregated proof of all the parity circuit iterations. */
    readonly msgs: Tuple<Fr, typeof NUM_MSGS_PER_BASE_PARITY>;
    constructor(
    /** Aggregated proof of all the parity circuit iterations. */
    msgs: Tuple<Fr, typeof NUM_MSGS_PER_BASE_PARITY>);
    static fromSlice(array: Tuple<Fr, typeof NUMBER_OF_L1_L2_MESSAGES_PER_ROLLUP>, index: number): BaseParityInputs;
    toBuffer(): Buffer;
    static fromBuffer(buffer: Buffer | BufferReader): BaseParityInputs;
}
//# sourceMappingURL=base_parity_inputs.d.ts.map