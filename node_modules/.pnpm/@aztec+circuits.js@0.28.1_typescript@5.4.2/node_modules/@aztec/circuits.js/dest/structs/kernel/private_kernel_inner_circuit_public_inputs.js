import { Fr } from '@aztec/foundation/fields';
import { BufferReader, serializeToBuffer } from '@aztec/foundation/serialize';
import { AggregationObject } from '../aggregation_object.js';
import { CombinedAccumulatedData } from './combined_accumulated_data.js';
import { CombinedConstantData } from './combined_constant_data.js';
/**
 * Public inputs to the inner private kernel circuit
 */
export class PrivateKernelInnerCircuitPublicInputs {
    constructor(
    /**
     * Aggregated proof of all the previous kernel iterations.
     */
    aggregationObject, // Contains the aggregated proof of all previous kernel iterations
    /**
     * The side effect counter that non-revertible side effects are all beneath.
     */
    minRevertibleSideEffectCounter, 
    /**
     * Data accumulated from both public and private circuits.
     */
    end, 
    /**
     * Data which is not modified by the circuits.
     */
    constants, 
    /**
     * Indicates whether the input is for a private or public kernel.
     */
    isPrivate) {
        this.aggregationObject = aggregationObject;
        this.minRevertibleSideEffectCounter = minRevertibleSideEffectCounter;
        this.end = end;
        this.constants = constants;
        this.isPrivate = isPrivate;
    }
    toBuffer() {
        return serializeToBuffer(this.aggregationObject, this.minRevertibleSideEffectCounter, this.end, this.constants, this.isPrivate);
    }
    /**
     * Deserializes from a buffer or reader, corresponding to a write in cpp.
     * @param buffer - Buffer or reader to read from.
     * @returns A new instance of PrivateKernelInnerCircuitPublicInputs.
     */
    static fromBuffer(buffer) {
        const reader = BufferReader.asReader(buffer);
        return new PrivateKernelInnerCircuitPublicInputs(reader.readObject(AggregationObject), reader.readObject(Fr), reader.readObject(CombinedAccumulatedData), reader.readObject(CombinedConstantData), reader.readBoolean());
    }
    static empty() {
        return new PrivateKernelInnerCircuitPublicInputs(AggregationObject.makeFake(), Fr.zero(), CombinedAccumulatedData.empty(), CombinedConstantData.empty(), true);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJpdmF0ZV9rZXJuZWxfaW5uZXJfY2lyY3VpdF9wdWJsaWNfaW5wdXRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3N0cnVjdHMva2VybmVsL3ByaXZhdGVfa2VybmVsX2lubmVyX2NpcmN1aXRfcHVibGljX2lucHV0cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsRUFBRSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDOUMsT0FBTyxFQUFFLFlBQVksRUFBRSxpQkFBaUIsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBRTlFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQzdELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ3pFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBRW5FOztHQUVHO0FBQ0gsTUFBTSxPQUFPLHFDQUFxQztJQUNoRDtJQUNFOztPQUVHO0lBQ0ksaUJBQW9DLEVBQUUsa0VBQWtFO0lBQy9HOztPQUVHO0lBQ0ksOEJBQWtDO0lBQ3pDOztPQUVHO0lBQ0ksR0FBNEI7SUFDbkM7O09BRUc7SUFDSSxTQUErQjtJQUN0Qzs7T0FFRztJQUNJLFNBQWtCO1FBaEJsQixzQkFBaUIsR0FBakIsaUJBQWlCLENBQW1CO1FBSXBDLG1DQUE4QixHQUE5Qiw4QkFBOEIsQ0FBSTtRQUlsQyxRQUFHLEdBQUgsR0FBRyxDQUF5QjtRQUk1QixjQUFTLEdBQVQsU0FBUyxDQUFzQjtRQUkvQixjQUFTLEdBQVQsU0FBUyxDQUFTO0lBQ3hCLENBQUM7SUFFSixRQUFRO1FBQ04sT0FBTyxpQkFBaUIsQ0FDdEIsSUFBSSxDQUFDLGlCQUFpQixFQUN0QixJQUFJLENBQUMsOEJBQThCLEVBQ25DLElBQUksQ0FBQyxHQUFHLEVBQ1IsSUFBSSxDQUFDLFNBQVMsRUFDZCxJQUFJLENBQUMsU0FBUyxDQUNmLENBQUM7SUFDSixDQUFDO0lBRUQ7Ozs7T0FJRztJQUNILE1BQU0sQ0FBQyxVQUFVLENBQUMsTUFBNkI7UUFDN0MsTUFBTSxNQUFNLEdBQUcsWUFBWSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUM3QyxPQUFPLElBQUkscUNBQXFDLENBQzlDLE1BQU0sQ0FBQyxVQUFVLENBQUMsaUJBQWlCLENBQUMsRUFDcEMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUMsRUFDckIsTUFBTSxDQUFDLFVBQVUsQ0FBQyx1QkFBdUIsQ0FBQyxFQUMxQyxNQUFNLENBQUMsVUFBVSxDQUFDLG9CQUFvQixDQUFDLEVBQ3ZDLE1BQU0sQ0FBQyxXQUFXLEVBQUUsQ0FDckIsQ0FBQztJQUNKLENBQUM7SUFFRCxNQUFNLENBQUMsS0FBSztRQUNWLE9BQU8sSUFBSSxxQ0FBcUMsQ0FDOUMsaUJBQWlCLENBQUMsUUFBUSxFQUFFLEVBQzVCLEVBQUUsQ0FBQyxJQUFJLEVBQUUsRUFDVCx1QkFBdUIsQ0FBQyxLQUFLLEVBQUUsRUFDL0Isb0JBQW9CLENBQUMsS0FBSyxFQUFFLEVBQzVCLElBQUksQ0FDTCxDQUFDO0lBQ0osQ0FBQztDQUNGIn0=