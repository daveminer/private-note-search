/// <reference types="node" resolution-mode="require"/>
import { Fr } from '@aztec/foundation/fields';
import { BufferReader } from '@aztec/foundation/serialize';
import { AggregationObject } from '../aggregation_object.js';
import { CombinedAccumulatedData } from './combined_accumulated_data.js';
import { CombinedConstantData } from './combined_constant_data.js';
/**
 * Public inputs to the inner private kernel circuit
 */
export declare class PrivateKernelInnerCircuitPublicInputs {
    /**
     * Aggregated proof of all the previous kernel iterations.
     */
    aggregationObject: AggregationObject;
    /**
     * The side effect counter that non-revertible side effects are all beneath.
     */
    minRevertibleSideEffectCounter: Fr;
    /**
     * Data accumulated from both public and private circuits.
     */
    end: CombinedAccumulatedData;
    /**
     * Data which is not modified by the circuits.
     */
    constants: CombinedConstantData;
    /**
     * Indicates whether the input is for a private or public kernel.
     */
    isPrivate: boolean;
    constructor(
    /**
     * Aggregated proof of all the previous kernel iterations.
     */
    aggregationObject: AggregationObject, // Contains the aggregated proof of all previous kernel iterations
    /**
     * The side effect counter that non-revertible side effects are all beneath.
     */
    minRevertibleSideEffectCounter: Fr, 
    /**
     * Data accumulated from both public and private circuits.
     */
    end: CombinedAccumulatedData, 
    /**
     * Data which is not modified by the circuits.
     */
    constants: CombinedConstantData, 
    /**
     * Indicates whether the input is for a private or public kernel.
     */
    isPrivate: boolean);
    toBuffer(): Buffer;
    /**
     * Deserializes from a buffer or reader, corresponding to a write in cpp.
     * @param buffer - Buffer or reader to read from.
     * @returns A new instance of PrivateKernelInnerCircuitPublicInputs.
     */
    static fromBuffer(buffer: Buffer | BufferReader): PrivateKernelInnerCircuitPublicInputs;
    static empty(): PrivateKernelInnerCircuitPublicInputs;
}
//# sourceMappingURL=private_kernel_inner_circuit_public_inputs.d.ts.map