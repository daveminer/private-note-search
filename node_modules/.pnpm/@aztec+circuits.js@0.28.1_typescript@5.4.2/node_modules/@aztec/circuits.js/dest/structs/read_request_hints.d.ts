/// <reference types="node" resolution-mode="require"/>
import { BufferReader, Tuple } from '@aztec/foundation/serialize';
import { TreeLeafPreimage } from '@aztec/foundation/trees';
import { MAX_NULLIFIER_READ_REQUESTS_PER_TX, NULLIFIER_TREE_HEIGHT } from '../constants.gen.js';
import { MembershipWitness } from './membership_witness.js';
export declare enum ReadRequestState {
    NADA = 0,
    PENDING = 1,
    SETTLED = 2
}
export declare class ReadRequestStatus {
    state: ReadRequestState;
    hintIndex: number;
    constructor(state: ReadRequestState, hintIndex: number);
    static nada(): ReadRequestStatus;
    static fromBuffer(buffer: Buffer | BufferReader): ReadRequestStatus;
    toBuffer(): Buffer;
}
export declare class PendingReadHint {
    readRequestIndex: number;
    pendingValueIndex: number;
    constructor(readRequestIndex: number, pendingValueIndex: number);
    static nada(readRequestLen: number): PendingReadHint;
    static fromBuffer(buffer: Buffer | BufferReader): PendingReadHint;
    toBuffer(): Buffer;
}
export declare class SettledReadHint<TREE_HEIGHT extends number, LEAF_PREIMAGE extends TreeLeafPreimage> {
    readRequestIndex: number;
    membershipWitness: MembershipWitness<TREE_HEIGHT>;
    leafPreimage: LEAF_PREIMAGE;
    constructor(readRequestIndex: number, membershipWitness: MembershipWitness<TREE_HEIGHT>, leafPreimage: LEAF_PREIMAGE);
    static nada<TREE_HEIGHT extends number, LEAF_PREIMAGE extends TreeLeafPreimage>(readRequestLen: number, treeHeight: TREE_HEIGHT, emptyLeafPreimage: () => LEAF_PREIMAGE): SettledReadHint<TREE_HEIGHT, LEAF_PREIMAGE>;
    static fromBuffer<TREE_HEIGHT extends number, LEAF_PREIMAGE extends TreeLeafPreimage>(buffer: Buffer | BufferReader, treeHeight: TREE_HEIGHT, leafPreimage: {
        fromBuffer(buffer: BufferReader): LEAF_PREIMAGE;
    }): SettledReadHint<TREE_HEIGHT, LEAF_PREIMAGE>;
    toBuffer(): Buffer;
}
/**
 * Hints for read request reset circuit.
 */
export declare class ReadRequestResetHints<READ_REQUEST_LEN extends number, NUM_PENDING_READS extends number, NUM_SETTLED_READS extends number, TREE_HEIGHT extends number, LEAF_PREIMAGE extends TreeLeafPreimage> {
    readRequestStatuses: Tuple<ReadRequestStatus, READ_REQUEST_LEN>;
    /**
     * The hints for read requests reading pending values.
     */
    pendingReadHints: Tuple<PendingReadHint, NUM_PENDING_READS>;
    /**
     * The hints for read requests reading settled values.
     */
    settledReadHints: Tuple<SettledReadHint<TREE_HEIGHT, LEAF_PREIMAGE>, NUM_SETTLED_READS>;
    constructor(readRequestStatuses: Tuple<ReadRequestStatus, READ_REQUEST_LEN>, 
    /**
     * The hints for read requests reading pending values.
     */
    pendingReadHints: Tuple<PendingReadHint, NUM_PENDING_READS>, 
    /**
     * The hints for read requests reading settled values.
     */
    settledReadHints: Tuple<SettledReadHint<TREE_HEIGHT, LEAF_PREIMAGE>, NUM_SETTLED_READS>);
    /**
     * Deserializes from a buffer or reader.
     * @param buffer - Buffer or reader to read from.
     * @returns The deserialized instance.
     */
    static fromBuffer<READ_REQUEST_LEN extends number, NUM_PENDING_READS extends number, NUM_SETTLED_READS extends number, TREE_HEIGHT extends number, LEAF_PREIMAGE extends TreeLeafPreimage>(buffer: Buffer | BufferReader, readRequestLen: READ_REQUEST_LEN, numPendingReads: NUM_PENDING_READS, numSettledReads: NUM_SETTLED_READS, treeHeight: TREE_HEIGHT, leafPreimageFromBuffer: {
        fromBuffer: (buffer: BufferReader) => LEAF_PREIMAGE;
    }): ReadRequestResetHints<READ_REQUEST_LEN, NUM_PENDING_READS, NUM_SETTLED_READS, TREE_HEIGHT, LEAF_PREIMAGE>;
    toBuffer(): Buffer;
}
export type NullifierReadRequestHints = ReadRequestResetHints<typeof MAX_NULLIFIER_READ_REQUESTS_PER_TX, typeof MAX_NULLIFIER_READ_REQUESTS_PER_TX, typeof MAX_NULLIFIER_READ_REQUESTS_PER_TX, typeof NULLIFIER_TREE_HEIGHT, TreeLeafPreimage>;
export declare function nullifierReadRequestHintsFromBuffer(buffer: Buffer | BufferReader): NullifierReadRequestHints;
export declare class NullifierReadRequestHintsBuilder {
    private hints;
    private numPendingReadHints;
    private numSettledReadHints;
    constructor();
    static empty(): NullifierReadRequestHints;
    addPendingReadRequest(readRequestIndex: number, nullifierIndex: number): void;
    addSettledReadRequest(readRequestIndex: number, membershipWitness: MembershipWitness<typeof NULLIFIER_TREE_HEIGHT>, leafPreimage: TreeLeafPreimage): void;
    toHints(): NullifierReadRequestHints;
}
//# sourceMappingURL=read_request_hints.d.ts.map