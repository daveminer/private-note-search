/* Autogenerated file, do not edit! */
/* eslint-disable */
import { Contract, ContractBase, DeployMethod, loadContractArtifact, Point, } from '@aztec/aztec.js';
import SearchablePrivNoteContractArtifactJson from '../../contracts/target/private_note_search-SearchablePrivNote.json' assert { type: 'json' };
export const SearchablePrivNoteContractArtifact = loadContractArtifact(SearchablePrivNoteContractArtifactJson);
/**
 * Type-safe interface for contract SearchablePrivNote;
 */
export class SearchablePrivNoteContract extends ContractBase {
    constructor(instance, wallet) {
        super(instance, SearchablePrivNoteContractArtifact, wallet);
    }
    /**
     * Creates a contract instance.
     * @param address - The deployed contract's address.
     * @param wallet - The wallet to use when interacting with the contract.
     * @returns A promise that resolves to a new Contract instance.
     */
    static async at(address, wallet) {
        return Contract.at(address, SearchablePrivNoteContract.artifact, wallet);
    }
    /**
     * Creates a tx to deploy a new instance of this contract.
     */
    static deploy(wallet, admin, name, symbol, decimals) {
        return new DeployMethod(Point.ZERO, wallet, SearchablePrivNoteContractArtifact, SearchablePrivNoteContract.at, Array.from(arguments).slice(1));
    }
    /**
     * Creates a tx to deploy a new instance of this contract using the specified public key to derive the address.
     */
    static deployWithPublicKey(publicKey, wallet, admin, name, symbol, decimals) {
        return new DeployMethod(publicKey, wallet, SearchablePrivNoteContractArtifact, SearchablePrivNoteContract.at, Array.from(arguments).slice(2));
    }
    /**
     * Creates a tx to deploy a new instance of this contract using the specified constructor method.
     */
    static deployWithOpts(opts, ...args) {
        return new DeployMethod(opts.publicKey ?? Point.ZERO, opts.wallet, SearchablePrivNoteContractArtifact, SearchablePrivNoteContract.at, Array.from(arguments).slice(1), opts.method ?? 'constructor');
    }
    /**
     * Returns this contract's artifact.
     */
    static get artifact() {
        return SearchablePrivNoteContractArtifact;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2VhcmNoYWJsZVByaXZOb3RlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3RhcmdldC9TZWFyY2hhYmxlUHJpdk5vdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0Esc0NBQXNDO0FBRXRDLG9CQUFvQjtBQUNwQixPQUFPLEVBSUwsUUFBUSxFQUVSLFlBQVksRUFJWixZQUFZLEVBTVosb0JBQW9CLEVBRXBCLEtBQUssR0FJTixNQUFNLGlCQUFpQixDQUFDO0FBQ3pCLE9BQU8sc0NBQXNDLE1BQU0sb0VBQW9FLENBQUMsU0FBUyxJQUFJLEVBQUUsTUFBTSxFQUFFLENBQUM7QUFDaEosTUFBTSxDQUFDLE1BQU0sa0NBQWtDLEdBQUcsb0JBQW9CLENBQUMsc0NBQThELENBQUMsQ0FBQztBQUV2STs7R0FFRztBQUNILE1BQU0sT0FBTywwQkFBMkIsU0FBUSxZQUFZO0lBRTFELFlBQ0UsUUFBcUMsRUFDckMsTUFBYztRQUVkLEtBQUssQ0FBQyxRQUFRLEVBQUUsa0NBQWtDLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDOUQsQ0FBQztJQUlEOzs7OztPQUtHO0lBQ0ksTUFBTSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQ3BCLE9BQXFCLEVBQ3JCLE1BQWM7UUFFZCxPQUFPLFFBQVEsQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLDBCQUEwQixDQUFDLFFBQVEsRUFBRSxNQUFNLENBQXdDLENBQUM7SUFDbEgsQ0FBQztJQUdEOztPQUVHO0lBQ0ksTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFjLEVBQUUsS0FBdUIsRUFBRSxJQUFZLEVBQUUsTUFBYyxFQUFFLFFBQTJCO1FBQ3JILE9BQU8sSUFBSSxZQUFZLENBQTZCLEtBQUssQ0FBQyxJQUFJLEVBQUUsTUFBTSxFQUFFLGtDQUFrQyxFQUFFLDBCQUEwQixDQUFDLEVBQUUsRUFBRSxLQUFLLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzdLLENBQUM7SUFFRDs7T0FFRztJQUNJLE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQyxTQUFvQixFQUFFLE1BQWMsRUFBRSxLQUF1QixFQUFFLElBQVksRUFBRSxNQUFjLEVBQUUsUUFBMkI7UUFDeEosT0FBTyxJQUFJLFlBQVksQ0FBNkIsU0FBUyxFQUFFLE1BQU0sRUFBRSxrQ0FBa0MsRUFBRSwwQkFBMEIsQ0FBQyxFQUFFLEVBQUUsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUM1SyxDQUFDO0lBRUQ7O09BRUc7SUFDSSxNQUFNLENBQUMsY0FBYyxDQUMxQixJQUEyRCxFQUMzRCxHQUFHLElBQTBEO1FBRTdELE9BQU8sSUFBSSxZQUFZLENBQ3JCLElBQUksQ0FBQyxTQUFTLElBQUksS0FBSyxDQUFDLElBQUksRUFDNUIsSUFBSSxDQUFDLE1BQU0sRUFDWCxrQ0FBa0MsRUFDbEMsMEJBQTBCLENBQUMsRUFBRSxFQUM3QixLQUFLLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFDOUIsSUFBSSxDQUFDLE1BQU0sSUFBSSxhQUFhLENBQzdCLENBQUM7SUFDSixDQUFDO0lBSUQ7O09BRUc7SUFDSSxNQUFNLEtBQUssUUFBUTtRQUN4QixPQUFPLGtDQUFrQyxDQUFDO0lBQzVDLENBQUM7Q0FtR0YifQ==